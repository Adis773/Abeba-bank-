"use client"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { Textarea } from "@/components/ui/textarea"
import { Progress } from "@/components/ui/progress"
import { Badge } from "@/components/ui/badge"
import { Store, Upload, CheckCircle, Clock, Zap, Rocket, Building, User } from "lucide-react"

export function BusinessRegistration() {
  const [step, setStep] = useState(1)
  const [formData, setFormData] = useState({
    businessName: "",
    businessType: "",
    description: "",
    category: "",
    ownerName: "",
    phone: "",
    email: "",
  })

  const totalSteps = 4
  const progress = (step / totalSteps) * 100

  const businessTypes = [
    { value: "ip", label: "–ò–ü (–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å)" },
    { value: "ooo", label: "–û–û–û (–û–±—â–µ—Å—Ç–≤–æ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å—é)" },
    { value: "micro", label: "–ú–∏–∫—Ä–æ-–±–∏–∑–Ω–µ—Å (–±–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏)" },
  ]

  const categories = [
    "üçï –ï–¥–∞ –∏ –Ω–∞–ø–∏—Ç–∫–∏",
    "üëï –û–¥–µ–∂–¥–∞ –∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã",
    "üíª IT –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
    "üé® –¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ –∏ —Ö–æ–±–±–∏",
    "üè† –î–æ–º –∏ –±—ã—Ç",
    "üöó –ê–≤—Ç–æ –∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç",
    "üíÑ –ö—Ä–∞—Å–æ—Ç–∞ –∏ –∑–¥–æ—Ä–æ–≤—å–µ",
    "üìö –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ",
    "üéÆ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è",
    "üîß –£—Å–ª—É–≥–∏",
  ]

  const handleNext = () => {
    if (step < totalSteps) setStep(step + 1)
  }

  const handlePrev = () => {
    if (step > 1) setStep(step - 1)
  }

  const renderStep = () => {
    switch (step) {
      case 1:
        return (
          <div className="space-y-4">
            <div>
              <Label htmlFor="businessName" className="text-white">
                –ù–∞–∑–≤–∞–Ω–∏–µ –±–∏–∑–Ω–µ—Å–∞
              </Label>
              <Input
                id="businessName"
                placeholder="–ú–µ–º–Ω–∞—è –®–∞—É—Ä–º–∞ ü•ô"
                value={formData.businessName}
                onChange={(e) => setFormData({ ...formData, businessName: e.target.value })}
                className="bg-purple-900/20 border-purple-500/30 text-white placeholder:text-purple-300"
              />
            </div>

            <div>
              <Label className="text-white">–¢–∏–ø –±–∏–∑–Ω–µ—Å–∞</Label>
              <Select
                value={formData.businessType}
                onValueChange={(value) => setFormData({ ...formData, businessType: value })}
              >
                <SelectTrigger className="bg-purple-900/20 border-purple-500/30 text-white">
                  <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø" />
                </SelectTrigger>
                <SelectContent>
                  {businessTypes.map((type) => (
                    <SelectItem key={type.value} value={type.value}>
                      {type.label}
                    </SelectItem>
                  ))}
                </SelectContent>
              </Select>
            </div>

            <div>
              <Label className="text-white">–ö–∞—Ç–µ–≥–æ—Ä–∏—è</Label>
              <Select
                value={formData.category}
                onValueChange={(value) => setFormData({ ...formData, category: value })}
              >
                <SelectTrigger className="bg-purple-900/20 border-purple-500/30 text-white">
                  <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é" />
                </SelectTrigger>
                <SelectContent>
                  {categories.map((cat) => (
                    <SelectItem key={cat} value={cat}>
                      {cat}
                    </SelectItem>
                  ))}
                </SelectContent>
              </Select>
            </div>

            <div>
              <Label htmlFor="description" className="text-white">
                –û–ø–∏—Å–∞–Ω–∏–µ –±–∏–∑–Ω–µ—Å–∞
              </Label>
              <Textarea
                id="description"
                placeholder="–°–∞–º–∞—è –∞–±–µ–±–Ω–∞—è —à–∞—É—Ä–º–∞ –≤ –≥–æ—Ä–æ–¥–µ! –ì–æ—Ç–æ–≤–∏–º —Å –ª—é–±–æ–≤—å—é –∏ –º–µ–º–∞–º–∏ üî•"
                value={formData.description}
                onChange={(e) => setFormData({ ...formData, description: e.target.value })}
                className="bg-purple-900/20 border-purple-500/30 text-white placeholder:text-purple-300"
              />
            </div>
          </div>
        )

      case 2:
        return (
          <div className="space-y-4">
            <div>
              <Label htmlFor="ownerName" className="text-white">
                –§–ò–û –≤–ª–∞–¥–µ–ª—å—Ü–∞
              </Label>
              <Input
                id="ownerName"
                placeholder="–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á"
                value={formData.ownerName}
                onChange={(e) => setFormData({ ...formData, ownerName: e.target.value })}
                className="bg-purple-900/20 border-purple-500/30 text-white placeholder:text-purple-300"
              />
            </div>

            <div>
              <Label htmlFor="phone" className="text-white">
                –¢–µ–ª–µ—Ñ–æ–Ω
              </Label>
              <Input
                id="phone"
                placeholder="+7 (999) 123-45-67"
                value={formData.phone}
                onChange={(e) => setFormData({ ...formData, phone: e.target.value })}
                className="bg-purple-900/20 border-purple-500/30 text-white placeholder:text-purple-300"
              />
            </div>

            <div>
              <Label htmlFor="email" className="text-white">
                Email
              </Label>
              <Input
                id="email"
                type="email"
                placeholder="ivan@abeba.bank"
                value={formData.email}
                onChange={(e) => setFormData({ ...formData, email: e.target.value })}
                className="bg-purple-900/20 border-purple-500/30 text-white placeholder:text-purple-300"
              />
            </div>
          </div>
        )

      case 3:
        return (
          <div className="space-y-6">
            <div className="text-center">
              <Upload className="w-16 h-16 mx-auto text-purple-400 mb-4" />
              <h3 className="text-xl font-bold text-white mb-2">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤</h3>
              <p className="text-purple-300">–ó–∞–≥—Ä—É–∑–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏</p>
            </div>

            <div className="space-y-4">
              <Card className="bg-purple-900/20 border-purple-500/30">
                <CardContent className="p-4">
                  <div className="flex items-center justify-between">
                    <div className="flex items-center space-x-3">
                      <User className="w-5 h-5 text-purple-400" />
                      <span className="text-white">–ü–∞—Å–ø–æ—Ä—Ç (–≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞)</span>
                    </div>
                    <Button size="sm" variant="outline" className="border-purple-500/30 bg-transparent">
                      –ó–∞–≥—Ä—É–∑–∏—Ç—å
                    </Button>
                  </div>
                </CardContent>
              </Card>

              <Card className="bg-purple-900/20 border-purple-500/30">
                <CardContent className="p-4">
                  <div className="flex items-center justify-between">
                    <div className="flex items-center space-x-3">
                      <Building className="w-5 h-5 text-purple-400" />
                      <span className="text-white">–î–æ–∫—É–º–µ–Ω—Ç—ã –ò–ü/–û–û–û</span>
                    </div>
                    <Button size="sm" variant="outline" className="border-purple-500/30 bg-transparent">
                      –ó–∞–≥—Ä—É–∑–∏—Ç—å
                    </Button>
                  </div>
                </CardContent>
              </Card>
            </div>

            <div className="bg-blue-500/10 border border-blue-500/30 rounded-lg p-4">
              <div className="flex items-start space-x-3">
                <Zap className="w-5 h-5 text-blue-400 mt-0.5" />
                <div>
                  <h4 className="font-bold text-blue-300">–ë—ã—Å—Ç—Ä–∞—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è</h4>
                  <p className="text-sm text-blue-200">
                    –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º AI –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤. –û–±—ã—á–Ω–æ —ç—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç –º–µ–Ω–µ–µ 2 –º–∏–Ω—É—Ç! üöÄ
                  </p>
                </div>
              </div>
            </div>
          </div>
        )

      case 4:
        return (
          <div className="text-center space-y-6">
            <div className="w-24 h-24 mx-auto bg-gradient-to-r from-green-400 to-emerald-500 rounded-full flex items-center justify-center">
              <CheckCircle className="w-12 h-12 text-white" />
            </div>

            <div>
              <h3 className="text-2xl font-bold text-white mb-2">üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!</h3>
              <p className="text-purple-300">–í–∞—à –±–∏–∑–Ω–µ—Å —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ ABEBA –ë–∞–Ω–∫</p>
            </div>

            <Card className="bg-gradient-to-br from-purple-500/20 to-pink-500/20 border-purple-400/50">
              <CardContent className="p-6">
                <h4 className="font-bold text-white mb-4">–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:</h4>
                <div className="space-y-2 text-left">
                  <div className="flex justify-between">
                    <span className="text-purple-300">–ë–∏–∑–Ω–µ—Å ID:</span>
                    <span className="text-white font-mono">
                      @{formData.businessName.toLowerCase().replace(/\s+/g, "")}
                    </span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-purple-300">–°—Ç–∞—Ç—É—Å:</span>
                    <Badge className="bg-green-500">–ê–∫—Ç–∏–≤–µ–Ω</Badge>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-purple-300">–ö–æ–º–∏—Å—Å–∏—è:</span>
                    <span className="text-green-400 font-bold">0% üî•</span>
                  </div>
                </div>
              </CardContent>
            </Card>

            <div className="grid grid-cols-2 gap-4">
              <Button className="bg-gradient-to-r from-purple-500 to-pink-500">
                <Store className="w-4 h-4 mr-2" />
                –û—Ç–∫—Ä—ã—Ç—å –∫–∞–±–∏–Ω–µ—Ç
              </Button>
              <Button variant="outline" className="border-purple-500/30 bg-transparent">
                <Rocket className="w-4 h-4 mr-2" />
                –°–æ–∑–¥–∞—Ç—å QR
              </Button>
            </div>
          </div>
        )

      default:
        return null
    }
  }

  return (
    <div className="max-w-2xl mx-auto">
      <Card className="bg-black/40 border-purple-500/30 backdrop-blur-sm">
        <CardHeader>
          <CardTitle className="text-white flex items-center">
            <Store className="w-6 h-6 mr-2 text-purple-400" />
            –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –±–∏–∑–Ω–µ—Å–∞ –∑–∞ 5 –º–∏–Ω—É—Ç
          </CardTitle>
          <CardDescription className="text-purple-300">
            –®–∞–≥ {step} –∏–∑ {totalSteps} -{" "}
            {step === 1
              ? "–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
              : step === 2
                ? "–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ"
                : step === 3
                  ? "–î–æ–∫—É–º–µ–Ω—Ç—ã"
                  : "–ì–æ—Ç–æ–≤–æ!"}
          </CardDescription>
          <Progress value={progress} className="mt-2" />
        </CardHeader>

        <CardContent className="space-y-6">
          {renderStep()}

          {step < totalSteps && (
            <div className="flex justify-between">
              <Button
                variant="outline"
                onClick={handlePrev}
                disabled={step === 1}
                className="border-purple-500/30 bg-transparent"
              >
                –ù–∞–∑–∞–¥
              </Button>
              <Button
                onClick={handleNext}
                className="bg-gradient-to-r from-purple-500 to-pink-500"
                disabled={step === 1 && (!formData.businessName || !formData.businessType)}
              >
                {step === 3 ? "–ó–∞–≤–µ—Ä—à–∏—Ç—å" : "–î–∞–ª–µ–µ"}
                <Rocket className="w-4 h-4 ml-2" />
              </Button>
            </div>
          )}
        </CardContent>
      </Card>

      {/* Benefits */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mt-6">
        <Card className="bg-green-500/10 border-green-500/30">
          <CardContent className="p-4 text-center">
            <Zap className="w-8 h-8 mx-auto text-green-400 mb-2" />
            <h4 className="font-bold text-white">–ú–≥–Ω–æ–≤–µ–Ω–Ω–æ</h4>
            <p className="text-sm text-green-300">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞ 5 –º–∏–Ω—É—Ç</p>
          </CardContent>
        </Card>

        <Card className="bg-blue-500/10 border-blue-500/30">
          <CardContent className="p-4 text-center">
            <div className="text-2xl mb-2">0%</div>
            <h4 className="font-bold text-white">–ë–µ–∑ –∫–æ–º–∏—Å—Å–∏–π</h4>
            <p className="text-sm text-blue-300">–ù–∞–≤—Å–µ–≥–¥–∞</p>
          </CardContent>
        </Card>

        <Card className="bg-purple-500/10 border-purple-500/30">
          <CardContent className="p-4 text-center">
            <Clock className="w-8 h-8 mx-auto text-purple-400 mb-2" />
            <h4 className="font-bold text-white">24/7</h4>
            <p className="text-sm text-purple-300">–†–∞–±–æ—Ç–∞–µ—Ç –≤—Å–µ–≥–¥–∞</p>
          </CardContent>
        </Card>
      </div>
    </div>
  )
}
