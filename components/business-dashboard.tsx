"use client"

import type React from "react"

import { useState, useEffect, useRef } from "react"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Textarea } from "@/components/ui/textarea"
import { Progress } from "@/components/ui/progress"
import { Store, Plus, QrCode, TrendingUp, Users, DollarSign, Settings, Upload, CheckCircle, Eye, Camera } from 'lucide-react'
import Image from "next/image"
import { RealQRGenerator } from "@/components/real-qr-generator"
import { registerBusiness, getBusinessByUserId } from "@/app/actions/business" // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è

interface BusinessDashboardProps {
  user: any
}

export function BusinessDashboard({ user }: BusinessDashboardProps) {
  const [hasBusinessAccount, setHasBusinessAccount] = useState(false)
  const [businessData, setBusinessData] = useState({
    id: "", // –î–æ–±–∞–≤–ª—è–µ–º ID –±–∏–∑–Ω–µ—Å–∞
    name: "",
    description: "",
    category: "",
    email: user.email || "",
    ownerId: user.id, // –°–≤—è–∑—ã–≤–∞–µ–º –±–∏–∑–Ω–µ—Å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    businessPhoto: null as File | null, // –î–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ
    businessPhotoUrl: "/placeholder.svg?height=100&width=100", // URL –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  })
  const [registrationStep, setRegistrationStep] = useState(1)
  const [isRegistering, setIsRegistering] = useState(false)
  const [showQRGeneratorModal, setShowQRGeneratorModal] = useState(false)
  const fileInputRef = useRef<HTMLInputElement>(null)

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ –±–∏–∑–Ω–µ—Å–µ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    const fetchBusiness = async () => {
      const existingBusiness = await getBusinessByUserId(user.id)
      if (existingBusiness) {
        setHasBusinessAccount(true)
        setBusinessData({
          ...businessData,
          id: existingBusiness.id,
          name: existingBusiness.name,
          description: existingBusiness.description,
          category: existingBusiness.category,
          email: existingBusiness.email,
          businessPhotoUrl: existingBusiness.businessPhotoUrl || "/placeholder.svg?height=100&width=100",
        })
      }
    }
    fetchBusiness()
  }, [user.id])

  const businessStats = {
    todayRevenue: 1247.5,
    totalCustomers: 156,
    averageCheck: 87.3,
    transactionsToday: 23,
  }

  const recentTransactions = [
    { id: 1, customer: "@foodlover", amount: 125.0, item: "–®–∞—É—Ä–º–∞ + –∫–æ–ª–∞", time: "5 –º–∏–Ω –Ω–∞–∑–∞–¥" },
    { id: 2, customer: "@student", amount: 45.5, item: "–ö–æ—Ñ–µ –ª–∞—Ç—Ç–µ", time: "12 –º–∏–Ω –Ω–∞–∑–∞–¥" },
    { id: 3, customer: "@memebro", amount: 200.0, item: "–ö–æ–º–±–æ –æ–±–µ–¥", time: "25 –º–∏–Ω –Ω–∞–∑–∞–¥" },
  ]

  const handlePhotoUpload = (event: React.ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0]
    if (file) {
      setBusinessData({ ...businessData, businessPhoto: file, businessPhotoUrl: URL.createObjectURL(file) })
    }
  }

  const handleBusinessRegistration = async () => {
    setIsRegistering(true)
    try {
      // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª–∞ –±—ã –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, Vercel Blob –∏–ª–∏ Supabase Storage)
      // –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ URL, –∫–æ—Ç–æ—Ä—ã–π –∑–∞—Ç–µ–º —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
      // –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É –¥–ª—è URL —Ñ–æ—Ç–æ.
      const photoUrl = businessData.businessPhoto
        ? URL.createObjectURL(businessData.businessPhoto)
        : "/placeholder.svg?height=100&width=100"

      const newBusiness = await registerBusiness({
        name: businessData.name,
        description: businessData.description,
        category: businessData.category,
        email: businessData.email,
        ownerId: user.id,
        businessPhotoUrl: photoUrl, // –ü–µ—Ä–µ–¥–∞–µ–º URL —Ñ–æ—Ç–æ
      })

      if (newBusiness) {
        setHasBusinessAccount(true)
        setBusinessData({
          ...businessData,
          id: newBusiness.id,
          businessPhotoUrl: newBusiness.businessPhotoUrl,
        })
        alert("–ë–∏–∑–Ω–µ—Å —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!")
      } else {
        alert("–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –±–∏–∑–Ω–µ—Å–∞.")
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –±–∏–∑–Ω–µ—Å–∞:", error)
      alert("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –±–∏–∑–Ω–µ—Å–∞.")
    } finally {
      setIsRegistering(false)
    }
  }

  if (!hasBusinessAccount) {
    return (
      <div className="space-y-6">
        {/* Hero Section */}
        <Card className="bg-gradient-to-br from-purple-500/20 to-pink-500/20 border-purple-400/50">
          <CardContent className="p-8 text-center">
            <Image src="/abeba-logo.png" alt="ABEBA" width={80} height={80} className="mx-auto mb-4" />
            <h2 className="text-3xl font-bold text-white mb-4">–û—Ç–∫—Ä–æ–π —Å–≤–æ–π –±–∏–∑–Ω–µ—Å –≤ ABEBA! ü¶Ü</h2>
            <p className="text-purple-200 mb-6">
              –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è –∑–∞ 5 –º–∏–Ω—É—Ç, –ø—Ä–∏–Ω–∏–º–∞–π –æ–ø–ª–∞—Ç—ã –±–µ–∑ –∫–æ–º–∏—Å—Å–∏–π –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –±–æ–ª—å—à–µ!
            </p>

            <div className="grid grid-cols-3 gap-4 mb-6">
              <div className="bg-white/10 rounded-lg p-4">
                <div className="text-2xl font-bold text-white">0%</div>
                <div className="text-sm text-purple-200">–ö–æ–º–∏—Å—Å–∏—è</div>
              </div>
              <div className="bg-white/10 rounded-lg p-4">
                <div className="text-2xl font-bold text-white">5 –º–∏–Ω</div>
                <div className="text-sm text-purple-200">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</div>
              </div>
              <div className="bg-white/10 rounded-lg p-4">
                <div className="text-2xl font-bold text-white">24/7</div>
                <div className="text-sm text-purple-200">–ü–æ–¥–¥–µ—Ä–∂–∫–∞</div>
              </div>
            </div>

            <Button
              onClick={() => setRegistrationStep(1)}
              className="bg-gradient-to-r from-green-500 to-emerald-500 hover:from-green-600 hover:to-emerald-600 text-lg px-8 py-3 whitespace-nowrap"
            >
              <Store className="w-5 h-5 mr-2" />
              –û—Ç–∫—Ä—ã—Ç—å –±–∏–∑–Ω–µ—Å-–∞–∫–∫–∞—É–Ω—Ç üöÄ
            </Button>
          </CardContent>
        </Card>

        {/* Registration Form */}
        {registrationStep > 0 && (
          <Card className="bg-black/40 border-purple-500/30 backdrop-blur-sm">
            <CardHeader>
              <CardTitle className="text-white">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –±–∏–∑–Ω–µ—Å–∞</CardTitle>
              <CardDescription className="text-purple-300">
                –®–∞–≥ {registrationStep} –∏–∑ 3 - –ó–∞–ø–æ–ª–Ω–∏ –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
              </CardDescription>
              <Progress value={(registrationStep / 3) * 100} className="mt-2" />
            </CardHeader>
            <CardContent className="space-y-4">
              {registrationStep === 1 && (
                <>
                  {/* Business Photo */}
                  <div className="text-center">
                    <div
                      className="w-20 h-20 mx-auto mb-2 bg-purple-900/20 border-2 border-dashed border-purple-500 rounded-full flex items-center justify-center cursor-pointer overflow-hidden"
                      onClick={() => fileInputRef.current?.click()}
                    >
                      {businessData.businessPhotoUrl &&
                      businessData.businessPhotoUrl !== "/placeholder.svg?height=100&width=100" ? (
                        <img
                          src={businessData.businessPhotoUrl || "/placeholder.svg"}
                          alt="Business Logo"
                          className="w-full h-full object-cover"
                        />
                      ) : (
                        <Camera className="w-8 h-8 text-purple-400" />
                      )}
                    </div>
                    <input
                      ref={fileInputRef}
                      type="file"
                      accept="image/*"
                      onChange={handlePhotoUpload}
                      className="hidden"
                    />
                    <Label
                      className="text-purple-300 text-sm cursor-pointer whitespace-nowrap"
                      onClick={() => fileInputRef.current?.click()}
                    >
                      –ó–∞–≥—Ä—É–∑–∏—Ç—å –ª–æ–≥–æ—Ç–∏–ø –±–∏–∑–Ω–µ—Å–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
                    </Label>
                  </div>

                  <div>
                    <Label htmlFor="businessName" className="text-white">
                      –ù–∞–∑–≤–∞–Ω–∏–µ –±–∏–∑–Ω–µ—Å–∞ *
                    </Label>
                    <Input
                      id="businessName"
                      placeholder="–ú–µ–º–Ω–∞—è –®–∞—É—Ä–º–∞ ü•ô"
                      value={businessData.name}
                      onChange={(e) => setBusinessData({ ...businessData, name: e.target.value })}
                      className="bg-purple-900/20 border-purple-500/30 text-white"
                    />
                  </div>

                  <div>
                    <Label htmlFor="businessDesc" className="text-white">
                      –û–ø–∏—Å–∞–Ω–∏–µ
                    </Label>
                    <Textarea
                      id="businessDesc"
                      placeholder="–°–∞–º–∞—è –∞–±–µ–±–Ω–∞—è —à–∞—É—Ä–º–∞ –≤ –≥–æ—Ä–æ–¥–µ! üî•"
                      value={businessData.description}
                      onChange={(e) => setBusinessData({ ...businessData, description: e.target.value })}
                      className="bg-purple-900/20 border-purple-500/30 text-white"
                    />
                  </div>

                  <Button
                    onClick={() => setRegistrationStep(2)}
                    disabled={!businessData.name}
                    className="w-full bg-gradient-to-r from-purple-500 to-pink-500 whitespace-nowrap"
                  >
                    –î–∞–ª–µ–µ ‚Üí
                  </Button>
                </>
              )}

              {registrationStep === 2 && (
                <>
                  <div className="text-center py-6">
                    <Upload className="w-16 h-16 mx-auto text-purple-400 mb-4" />
                    <h3 className="text-xl font-bold text-white mb-2">–î–æ–∫—É–º–µ–Ω—Ç—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)</h3>
                    <p className="text-purple-300 mb-4">–ó–∞–≥—Ä—É–∑–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ "–ü—Ä–æ–≤–µ—Ä–µ–Ω" ‚úÖ</p>

                    <div className="bg-blue-500/10 border border-blue-500/30 rounded-lg p-4 mb-4">
                      <div className="text-sm text-blue-200">
                        <strong>–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏:</strong>
                        <br />‚Ä¢ –ü–æ–∫—É–ø–∞—Ç–µ–ª–∏ –≤–∏–¥—è—Ç –±–µ–π–¥–∂ "–ü—Ä–æ–≤–µ—Ä–µ–Ω"
                        <br />‚Ä¢ –ë–æ–ª—å—à–µ –¥–æ–≤–µ—Ä–∏—è = –±–æ–ª—å—à–µ –ø—Ä–æ–¥–∞–∂
                        <br />‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞
                      </div>
                    </div>

                    <div className="space-y-2">
                      <Button
                        variant="outline"
                        className="w-full border-purple-500/30 bg-transparent whitespace-nowrap"
                      >
                        üìÑ –ó–∞–≥—Ä—É–∑–∏—Ç—å –ø–∞—Å–ø–æ—Ä—Ç
                      </Button>
                      <Button
                        variant="outline"
                        className="w-full border-purple-500/30 bg-transparent whitespace-nowrap"
                      >
                        üè¢ –î–æ–∫—É–º–µ–Ω—Ç—ã –ò–ü/–û–û–û
                      </Button>
                    </div>
                  </div>

                  <div className="flex space-x-3">
                    <Button
                      variant="outline"
                      onClick={() => setRegistrationStep(1)}
                      className="flex-1 border-purple-500/30 bg-transparent whitespace-nowrap"
                    >
                      ‚Üê –ù–∞–∑–∞–¥
                    </Button>
                    <Button
                      onClick={() => setRegistrationStep(3)}
                      className="flex-1 bg-gradient-to-r from-purple-500 to-pink-500 whitespace-nowrap"
                    >
                      –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å / –î–∞–ª–µ–µ ‚Üí
                    </Button>
                  </div>
                </>
              )}

              {registrationStep === 3 && (
                <>
                  <div className="text-center py-6">
                    <CheckCircle className="w-16 h-16 mx-auto text-green-400 mb-4" />
                    <h3 className="text-2xl font-bold text-white mb-2">–ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–æ! üéâ</h3>
                    <p className="text-purple-300 mb-6">–ü—Ä–æ–≤–µ—Ä—å –¥–∞–Ω–Ω—ã–µ –∏ –∑–∞–ø—É—Å–∫–∞–π —Å–≤–æ–π –∞–±–µ–±–Ω—ã–π –±–∏–∑–Ω–µ—Å!</p>

                    <Card className="bg-purple-900/20 border-purple-500/20 text-left">
                      <CardContent className="p-4 space-y-2">
                        <div className="flex justify-between">
                          <span className="text-purple-300">–ù–∞–∑–≤–∞–Ω–∏–µ:</span>
                          <span className="text-white">{businessData.name}</span>
                        </div>
                        <div className="flex justify-between">
                          <span className="text-purple-300">–í–ª–∞–¥–µ–ª–µ—Ü:</span>
                          <span className="text-white">{user.name}</span>
                        </div>
                        <div className="flex justify-between">
                          <span className="text-purple-300">Email:</span>
                          <span className="text-white">{businessData.email}</span>
                        </div>
                        <div className="flex justify-between">
                          <span className="text-purple-300">–ö–æ–º–∏—Å—Å–∏—è:</span>
                          <span className="text-green-400 font-bold">0% üî•</span>
                        </div>
                      </CardContent>
                    </Card>
                  </div>

                  <Button
                    onClick={handleBusinessRegistration}
                    disabled={isRegistering}
                    className="w-full bg-gradient-to-r from-green-500 to-emerald-500 hover:from-green-600 hover:to-emerald-600 text-lg py-3 whitespace-nowrap"
                  >
                    {isRegistering ? "–°–æ–∑–¥–∞–µ–º –±–∏–∑–Ω–µ—Å-–∞–∫–∫–∞—É–Ω—Ç..." : "üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–∏–∑–Ω–µ—Å!"}
                  </Button>
                </>
              )}
            </CardContent>
          </Card>
        )}
      </div>
    )
  }

  // Business Dashboard
  return (
    <div className="space-y-6">
      {/* Business Header */}
      <Card className="bg-gradient-to-br from-green-500/20 to-emerald-500/20 border-green-400/50">
        <CardContent className="p-6">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-4">
              <div className="w-16 h-16 bg-gradient-to-r from-green-500 to-emerald-500 rounded-full flex items-center justify-center overflow-hidden">
                {businessData.businessPhotoUrl &&
                businessData.businessPhotoUrl !== "/placeholder.svg?height=100&width=100" ? (
                  <img
                    src={businessData.businessPhotoUrl || "/placeholder.svg"}
                    alt="Business Logo"
                    className="w-full h-full object-cover"
                  />
                ) : (
                  <Store className="w-8 h-8 text-white" />
                )}
              </div>
              <div>
                <h2 className="text-2xl font-bold text-white">{businessData.name || "–ú–æ–π –ë–∏–∑–Ω–µ—Å"}</h2>
                <div className="flex items-center space-x-2">
                  <Badge className="bg-green-500/20 text-green-400 whitespace-nowrap">
                    <CheckCircle className="w-3 h-3 mr-1" />
                    –ê–∫—Ç–∏–≤–µ–Ω
                  </Badge>
                  {user.isVerified && (
                    <Badge className="bg-blue-500/20 text-blue-400 whitespace-nowrap">‚úÖ –ü—Ä–æ–≤–µ—Ä–µ–Ω</Badge>
                  )}
                </div>
              </div>
            </div>

            <Button variant="outline" className="border-green-500/30 text-green-300 bg-transparent whitespace-nowrap">
              <Settings className="w-4 h-4 mr-2" />
              –ù–∞—Å—Ç—Ä–æ–π–∫–∏
            </Button>
          </div>
        </CardContent>
      </Card>

      {/* Stats */}
      <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
        <Card className="bg-black/40 border-purple-500/30">
          <CardContent className="p-4 text-center">
            <DollarSign className="w-8 h-8 mx-auto text-green-400 mb-2" />
            <div className="text-2xl font-bold text-white">{businessStats.todayRevenue.toFixed(2)}</div>
            <div className="text-sm text-green-300">ABEBA —Å–µ–≥–æ–¥–Ω—è</div>
          </CardContent>
        </Card>

        <Card className="bg-black/40 border-purple-500/30">
          <CardContent className="p-4 text-center">
            <Users className="w-8 h-8 mx-auto text-blue-400 mb-2" />
            <div className="text-2xl font-bold text-white">{businessStats.totalCustomers}</div>
            <div className="text-sm text-blue-300">–ö–ª–∏–µ–Ω—Ç–æ–≤</div>
          </CardContent>
        </Card>

        <Card className="bg-black/40 border-purple-500/30">
          <CardContent className="p-4 text-center">
            <TrendingUp className="w-8 h-8 mx-auto text-purple-400 mb-2" />
            <div className="text-2xl font-bold text-white">{businessStats.averageCheck.toFixed(2)}</div>
            <div className="text-sm text-purple-300">–°—Ä–µ–¥–Ω–∏–π —á–µ–∫</div>
          </CardContent>
        </Card>

        <Card className="bg-black/40 border-purple-500/30">
          <CardContent className="p-4 text-center">
            <QrCode className="w-8 h-8 mx-auto text-orange-400 mb-2" />
            <div className="text-2xl font-bold text-white">{businessStats.transactionsToday}</div>
            <div className="text-sm text-orange-300">–û–ø–µ—Ä–∞—Ü–∏–π —Å–µ–≥–æ–¥–Ω—è</div>
          </CardContent>
        </Card>
      </div>

      {/* Quick Actions */}
      <div className="grid grid-cols-2 md:grid-cols-3 gap-4">
        <Button
          onClick={() => setShowQRGeneratorModal(true)}
          className="h-20 bg-gradient-to-br from-blue-500 to-cyan-600 flex-col space-y-2"
        >
          <QrCode className="w-6 h-6" />
          <span className="whitespace-nowrap">–°–æ–∑–¥–∞—Ç—å QR</span>
        </Button>

        <Button className="h-20 bg-gradient-to-br from-purple-500 to-pink-600 flex-col space-y-2">
          <Plus className="w-6 h-6" />
          <span className="whitespace-nowrap">–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä</span>
        </Button>

        <Button className="h-20 bg-gradient-to-br from-green-500 to-emerald-600 flex-col space-y-2">
          <Eye className="w-6 h-6" />
          <span className="whitespace-nowrap">–û—Ç—á–µ—Ç—ã</span>
        </Button>
      </div>

      {/* Recent Transactions */}
      <Card className="bg-black/40 border-purple-500/30">
        <CardHeader>
          <CardTitle className="text-white">–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø—Ä–æ–¥–∞–∂–∏</CardTitle>
          <CardDescription className="text-purple-300">–¢–≤–æ—è –∞–±–µ–±–Ω–∞—è –≤—ã—Ä—É—á–∫–∞ ü¶Ü</CardDescription>
        </CardHeader>
        <CardContent>
          <div className="space-y-4">
            {recentTransactions.map((tx) => (
              <div
                key={tx.id}
                className="flex items-center justify-between p-3 rounded-lg bg-purple-900/20 border border-purple-500/20"
              >
                <div className="flex items-center space-x-3">
                  <div className="w-10 h-10 bg-green-500/20 rounded-full flex items-center justify-center">
                    <DollarSign className="w-5 h-5 text-green-400" />
                  </div>
                  <div>
                    <div className="text-white font-medium">{tx.item}</div>
                    <div className="text-sm text-purple-300">–û—Ç {tx.customer}</div>
                    <div className="text-xs text-purple-400">{tx.time}</div>
                  </div>
                </div>
                <div className="text-right">
                  <div className="font-bold text-green-400">+{tx.amount.toFixed(2)} ABEBA</div>
                  <Badge className="text-xs bg-green-500/20 text-green-400">–ó–∞–≤–µ—Ä—à–µ–Ω–æ</Badge>
                </div>
              </div>
            ))}
          </div>
        </CardContent>
      </Card>

      {/* QR Generator Modal */}
      <RealQRGenerator isOpen={showQRGeneratorModal} onClose={() => setShowQRGeneratorModal(false)} />
    </div>
  )
}
